version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-net

  kafka:
    image: 'bitnami/kafka:3'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - app-net

  database:
    image: postgres
    container_name: database_kafka
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: myapp
      POSTGRES_PASSWORD: myapp
      POSTGRES_DB: myapp
    volumes:
      - pgdata:/data/postgres
    networks:
      - app-net

  microservice_email:
    build: ./microservices/email/
    container_name: microservice_email
    ports:
      - 3333:3333
    links:
      - database
    depends_on:
      - kafka
      - database
    restart: always
    networks:
      - app-net

  microservice_user:
    build: ./microservices/user/
    container_name: microservice_user
    ports:
      - 3000:3000
    links:
      - database
    depends_on:
      - kafka
      - database
    restart: always
    networks:
      - app-net

volumes:
  pgdata:
    driver: local
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local

networks:
  app-net:
    driver: bridge
